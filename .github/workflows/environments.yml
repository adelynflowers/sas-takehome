name: EnvironmentDeploymentWorkflow

on:
  push:
    branches: ["main"]

permissions:
  id-token: write
  contents: read

jobs:
  test-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: authenticate with azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: add azure artifacts credentials to gradle properties
        env:
          AZURE_ARTIFACTS_USERNAME: ${{ secrets.AZURE_ARTIFACTS_USERNAME }}
          AZURE_ARTIFACTS_PASSWORD: ${{ secrets.AZURE_ARTIFACTS_PASSWORD }}
        run: |
          echo adelynflowersUsername=$AZURE_ARTIFACTS_USERNAME >> ~/.gradle/gradle.properties;
          echo adelynflowersPassword=$AZURE_ARTIFACTS_PASSWORD >> ~/.gradle/gradle.properties

      - name: checkout repo
        uses: actions/checkout@v4.1.1

      - name: setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'

      - name: build and unit test with gradle
        run: ./gradlew build --no-daemon

      - name: run integration tests
        run: ./gradlew integrationTest --no-daemon

      - name: upload jar to azure artifacts
        run: ./gradlew publish

      - name: build docker image
        run: gradle bootBuildImage

      - name: upload docker image to container registry
        run: |
            az acr login --name adelynflowers;
            docker push $(gradle -q printName):$(gradle -q printVersion)      

  qa:
    runs-on: ubuntu-latest
    environment: qa
    needs: test-and-upload
    steps:

      - name: wip upload to azure
        run: echo "uploaded to azure"

